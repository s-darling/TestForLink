package com.orchestranetworks.geomatch;

//From what i can tell, this class just directs the java to look in the right data/set/space/base

import com.orchestranetworks.schema.Path;
/**
 * Generated by EBX5 5.4.0 Fix 002 [0907:0001], at  2015/12/21 14:35:06 [EST].
 * WARNING: Any manual changes to this class may be overwritten by generation process.
 * DO NOT MODIFY THIS CLASS.
 * 
 * This interface defines constants related to schema [Module: TheStoreModule, path: /WEB-INF/ebx/schemas/TheStoreDataModule.xsd].
 * 
 * Root paths in this interface: 
 * 	'/root'   relativeToRoot: false
 * 
 */
public interface Paths
{
	// ===============================================
	// Constants for nodes under '/root'.
	// Prefix:  ''.
	// Statistics:
	//		73 path constants.
	//		26 leaf nodes.
	public static final Path _Root = Path.parse("/root");

	// Table type path
	public final class _Store {
		private static final Path _Store = _Root.add("Store");
		public static Path getPathInSchema()
		{
			return _Store;
		}
	public static final Path _Identifier = Path.parse("./identifier");
	public static final Path _Name = Path.parse("./name");
	public static final Path _Type = Path.parse("./type");
	public static final Path _Address = Path.parse("./address");
	public static final Path _Address_Street = Path.parse("./address/street");
	public static final Path _Address_City = Path.parse("./address/city");
	public static final Path _Address_State = Path.parse("./address/state");
	public static final Path _Address_Postcode = Path.parse("./address/postcode");
	public static final Path _Address_Country = Path.parse("./address/country");
	} 

	// Table type path
	public final class _Category {
		private static final Path _Category = _Root.add("Category");
		public static Path getPathInSchema()
		{
			return _Category;
		}
	public static final Path _Identifier = Path.parse("./identifier");
	public static final Path _Parent = Path.parse("./parent");
	public static final Path _Name = Path.parse("./name");
	public static final Path _Comment = Path.parse("./comment");
	} 

	// Table type path
	public final class _Brand {
		private static final Path _Brand = _Root.add("Brand");
		public static Path getPathInSchema()
		{
			return _Brand;
		}
	public static final Path _Identifier = Path.parse("./identifier");
	public static final Path _Name = Path.parse("./name");
	} 

	// Table type path
	public final class _Item {
		private static final Path _Item = _Root.add("Item");
		public static Path getPathInSchema()
		{
			return _Item;
		}
	public static final Path _Identifier = Path.parse("./identifier");
	public static final Path _Category = Path.parse("./category");
	public static final Path _Brand = Path.parse("./brand");
	public static final Path _Inventories = Path.parse("./inventories");
	public static final Path _Name = Path.parse("./name");
	public static final Path _Available = Path.parse("./available");
	public static final Path _DefaultPrice = Path.parse("./defaultPrice");
	} 

	// Table type path
	public final class _Inventory {
		private static final Path _Inventory = _Root.add("Inventory");
		public static Path getPathInSchema()
		{
			return _Inventory;
		}
	public static final Path _Item = Path.parse("./item");
	public static final Path _Store = Path.parse("./store");
	public static final Path _Stock = Path.parse("./stock");
	public static final Path _Price = Path.parse("./price");
	public static final Path _Modified = Path.parse("./modified");
	} 
	// ===============================================

}
